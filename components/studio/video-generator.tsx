"use client"

import { useState } from "react"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { Textarea } from "@/components/ui/textarea"
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select"
import { Badge } from "@/components/ui/badge"
import { generateVideoWithCapCut, generateAIContent } from "@/lib/actions/studio"
import { Video, Wand2, Loader2, Play, Download, Share } from "lucide-react"
import { toast } from "@/components/ui/use-toast"

interface VideoGeneratorProps {
  projectId?: string
  clientId?: string
}

export default function VideoGenerator({ projectId, clientId }: VideoGeneratorProps) {
  const [title, setTitle] = useState("")
  const [content, setContent] = useState("")
  const [aspectRatio, setAspectRatio] = useState<string>("16:9")
  const [isGenerating, setIsGenerating] = useState(false)
  const [isGeneratingScript, setIsGeneratingScript] = useState(false)
  const [generatedVideo, setGeneratedVideo] = useState<string | null>(null)

  const aspectRatios = [
    { value: "16:9", label: "16:9 (Paysage)", description: "YouTube, Facebook" },
    { value: "9:16", label: "9:16 (Portrait)", description: "TikTok, Instagram Stories" },
    { value: "1:1", label: "1:1 (Carr√©)", description: "Instagram Post" },
    { value: "4:3", label: "4:3 (Standard)", description: "Pr√©sentation" },
  ]

  const handleGenerateScript = async () => {
    if (!title) {
      toast({
        title: "Erreur",
        description: "Veuillez saisir un titre pour g√©n√©rer le script",
        variant: "destructive",
      })
      return
    }

    setIsGeneratingScript(true)
    try {
      const result = await generateAIContent(
        `Cr√©e un script vid√©o engageant pour: ${title}. Le script doit √™tre adapt√© pour une vid√©o de 30-60 secondes.`,
        "video_script",
      )

      if (result.success) {
        setContent(result.content)
        toast({
          title: "Script g√©n√©r√© !",
          description: "Le script IA a √©t√© g√©n√©r√© avec succ√®s",
        })
      } else {
        throw new Error(result.error)
      }
    } catch (error) {
      toast({
        title: "Erreur",
        description: "Impossible de g√©n√©rer le script IA",
        variant: "destructive",
      })
    } finally {
      setIsGeneratingScript(false)
    }
  }

  const handleGenerateVideo = async () => {
    if (!title || !content) {
      toast({
        title: "Erreur",
        description: "Veuillez remplir tous les champs requis",
        variant: "destructive",
      })
      return
    }

    setIsGenerating(true)
    try {
      const result = await generateVideoWithCapCut({
        title,
        content,
        aspect_ratio: aspectRatio as any,
        project_id: projectId,
        client_id: clientId,
      })

      if (result.success && result.video_url) {
        setGeneratedVideo(result.video_url)
        toast({
          title: "Vid√©o g√©n√©r√©e !",
          description: "Votre vid√©o a √©t√© cr√©√©e avec succ√®s",
        })
      } else {
        throw new Error(result.error)
      }
    } catch (error) {
      toast({
        title: "Erreur",
        description: "Impossible de g√©n√©rer la vid√©o",
        variant: "destructive",
      })
    } finally {
      setIsGenerating(false)
    }
  }

  return (
    <div className="space-y-6">
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Video className="h-5 w-5" />
            G√©n√©rateur de Vid√©o IA
          </CardTitle>
          <CardDescription>Cr√©ez des vid√©os automatiquement √† partir de votre texte avec CapCut AI</CardDescription>
        </CardHeader>
        <CardContent className="space-y-6">
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div className="space-y-4">
              <div>
                <Label htmlFor="title">Titre de la vid√©o</Label>
                <Input
                  id="title"
                  value={title}
                  onChange={(e) => setTitle(e.target.value)}
                  placeholder="Ex: Pr√©sentation de notre nouveau produit"
                />
              </div>

              <div>
                <Label htmlFor="aspect-ratio">Format vid√©o</Label>
                <Select value={aspectRatio} onValueChange={setAspectRatio}>
                  <SelectTrigger>
                    <SelectValue />
                  </SelectTrigger>
                  <SelectContent>
                    {aspectRatios.map((ratio) => (
                      <SelectItem key={ratio.value} value={ratio.value}>
                        <div>
                          <div className="font-medium">{ratio.label}</div>
                          <div className="text-xs text-muted-foreground">{ratio.description}</div>
                        </div>
                      </SelectItem>
                    ))}
                  </SelectContent>
                </Select>
              </div>

              <div>
                <div className="flex items-center justify-between mb-2">
                  <Label htmlFor="content">Script de la vid√©o</Label>
                  <Button
                    variant="outline"
                    size="sm"
                    onClick={handleGenerateScript}
                    disabled={isGeneratingScript || !title}
                  >
                    {isGeneratingScript ? (
                      <Loader2 className="h-4 w-4 animate-spin mr-2" />
                    ) : (
                      <Wand2 className="h-4 w-4 mr-2" />
                    )}
                    G√©n√©rer avec IA
                  </Button>
                </div>
                <Textarea
                  id="content"
                  value={content}
                  onChange={(e) => setContent(e.target.value)}
                  placeholder="D√©crivez le contenu de votre vid√©o ou utilisez l'IA pour g√©n√©rer un script..."
                  rows={6}
                />
                <div className="text-xs text-muted-foreground mt-1">
                  {content.length}/3000 caract√®res (max pour CapCut)
                </div>
              </div>

              <Button onClick={handleGenerateVideo} disabled={isGenerating} className="w-full" size="lg">
                {isGenerating ? <Loader2 className="h-4 w-4 animate-spin mr-2" /> : <Video className="h-4 w-4 mr-2" />}
                {isGenerating ? "G√©n√©ration en cours..." : "G√©n√©rer la vid√©o"}
              </Button>
            </div>

            <div className="space-y-4">
              <div className="border-2 border-dashed border-gray-200 rounded-lg p-8 text-center">
                {generatedVideo ? (
                  <div className="space-y-4">
                    <div className="w-full aspect-video bg-black rounded-lg overflow-hidden">
                      <video
                        src={generatedVideo}
                        controls
                        className="w-full h-full object-cover"
                        poster="/placeholder.svg?height=200&width=300"
                      />
                    </div>
                    <div className="flex gap-2 justify-center">
                      <Button variant="outline" size="sm">
                        <Play className="h-4 w-4 mr-2" />
                        Pr√©visualiser
                      </Button>
                      <Button variant="outline" size="sm">
                        <Download className="h-4 w-4 mr-2" />
                        T√©l√©charger
                      </Button>
                      <Button variant="outline" size="sm">
                        <Share className="h-4 w-4 mr-2" />
                        Partager
                      </Button>
                    </div>
                    <Badge className="bg-green-100 text-green-800">Vid√©o g√©n√©r√©e avec succ√®s</Badge>
                  </div>
                ) : (
                  <div className="text-muted-foreground">
                    <Video className="h-12 w-12 mx-auto mb-4 opacity-50" />
                    <p>Votre vid√©o appara√Ætra ici</p>
                    <p className="text-sm">Remplissez les champs et cliquez sur "G√©n√©rer"</p>
                  </div>
                )}
              </div>

              <div className="bg-blue-50 p-4 rounded-lg">
                <h4 className="font-medium text-blue-900 mb-2">üí° Conseils pour de meilleures vid√©os</h4>
                <ul className="text-sm text-blue-800 space-y-1">
                  <li>‚Ä¢ Utilisez un titre accrocheur et descriptif</li>
                  <li>‚Ä¢ Gardez le script concis (30-60 secondes)</li>
                  <li>‚Ä¢ Adaptez le format √† votre plateforme cible</li>
                  <li>‚Ä¢ Incluez un call-to-action clair</li>
                </ul>
              </div>
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  )
}
