#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

console.log('üß™ Test d\'int√©gration Google AdSense\n');

// V√©rifier la configuration
const configPath = path.join(__dirname, '..', 'config', 'adsense.ts');
const layoutPath = path.join(__dirname, '..', 'app', 'layout.tsx');

try {
  // V√©rifier le fichier de configuration
  const configContent = fs.readFileSync(configPath, 'utf8');
  
  if (configContent.includes('ca-pub-XXXXXXXXXXXXXXX')) {
    console.log('‚ùå ID AdSense non configur√©');
    console.log('üí° Ex√©cute : node scripts/setup-adsense.js');
    process.exit(1);
  }
  
  // Extraire l'ID client
  const clientIdMatch = configContent.match(/CLIENT_ID: '([^']+)'/);
  if (clientIdMatch) {
    console.log(`‚úÖ ID AdSense configur√© : ${clientIdMatch[1]}`);
  }
  
  // V√©rifier l'int√©gration dans le layout
  const layoutContent = fs.readFileSync(layoutPath, 'utf8');
  
  if (layoutContent.includes('GoogleAutoAds')) {
    console.log('‚úÖ Auto Ads int√©gr√©es dans le layout');
  } else {
    console.log('‚ùå Auto Ads non int√©gr√©es dans le layout');
  }
  
  if (layoutContent.includes('import GoogleAutoAds')) {
    console.log('‚úÖ Import GoogleAutoAds pr√©sent');
  } else {
    console.log('‚ùå Import GoogleAutoAds manquant');
  }
  
  // V√©rifier les composants
  const components = [
    'components/ads/GoogleAutoAds.tsx',
    'components/ads/ContentAds.tsx'
  ];
  
  console.log('\nüìÅ V√©rification des composants :');
  components.forEach(component => {
    const componentPath = path.join(__dirname, '..', component);
    if (fs.existsSync(componentPath)) {
      console.log(`‚úÖ ${component}`);
    } else {
      console.log(`‚ùå ${component} manquant`);
    }
  });
  
  // V√©rifier l'exemple d'utilisation
  const servicesPath = path.join(__dirname, '..', 'app', 'services', 'page.tsx');
  if (fs.existsSync(servicesPath)) {
    const servicesContent = fs.readFileSync(servicesPath, 'utf8');
    if (servicesContent.includes('ContentAd')) {
      console.log('‚úÖ Exemple d\'utilisation dans services/page.tsx');
    } else {
      console.log('‚ùå Pas d\'exemple d\'utilisation trouv√©');
    }
  }
  
  console.log('\nüéØ Prochaines √©tapes :');
  console.log('1. Red√©marre ton serveur : pnpm dev');
  console.log('2. Ouvre http://localhost:3000');
  console.log('3. V√©rifie la console du navigateur');
  console.log('4. Cherche les √©l√©ments avec classe "adsbygoogle"');
  console.log('5. D√©ploie sur Vercel pour tester en production');
  
  console.log('\nüí° Conseils de test :');
  console.log('- Utilise les outils de d√©veloppement du navigateur');
  console.log('- V√©rifie l\'onglet Network pour les requ√™tes AdSense');
  console.log('- Teste sur mobile et desktop');
  console.log('- V√©rifie que les pubs ne cassent pas le design');
  
} catch (error) {
  console.error('‚ùå Erreur lors du test :', error.message);
  process.exit(1);
} 